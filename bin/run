#!/bin/bash
#
# vim-anywhere - use Vim whenever, wherever
# Author: Chris Knadler
# Homepage: https://www.github.com/cknadler/vim-anywhere
#
# Open a temporary file with Vim. Once Vim is closed, copy the contents of that
# file to the system clipboard.

###
# defs
###

err() { echo -e "$@" 1>&2; }

require_file_exists() {
  if [ ! -e $1 ]; then
    err "$1 does not exist. ${@:2}"
    exit 1
  fi
}

###
# opts
###

while getopts ":v" opt; do
  case "$opt" in
    v) set -x ;;
    \?) echo "Invalid option: -$OPTARG" >&2 ;;
  esac
done

###
# run
###

AW_PATH=$HOME/.vim-anywhere
TMPFILE_DIR=/tmp/vim-anywhere
TMPFILE=$TMPFILE_DIR/doc-$(date +"%y%m%d%H%M%S")

mkdir -p $TMPFILE_DIR

#LINUX_EDITOR_CMD="terminator -e 'vim $TMPFILE'"
#LINUX_EDITOR_CMD="gvim +'set ft=mail' +'set list!' --nofork $TMPFILE"
#LINUX_EDITOR_CMD="gnome-terminal -e 'vim $TMPFILE'"

# launch vimx inside xterm, fet filetype to mail, and toggle `list` so
# unprintable characters (tabs, newlines) aren't printed.  those are useful to
# see in code but not so much when writing emails, etc.
# bashrc must be sourced because `xterm -e cmd` doesn't run bashrc first.  my
# bashrc enabled 256 color xterm, so I'm sourcing it here.
LINUX_EDITOR_CMD="xterm -e 'source ~/.bashrc; vimx +\"set ft=mail\" +\"set list!\" $TMPFILE'"

# Linux
if [[ $OSTYPE == "linux-gnu" ]]; then
  xclip -o > $TMPFILE
  chmod o-r $TMPFILE # Make file only readable by you
  eval $LINUX_EDITOR_CMD
  cat $TMPFILE | xclip -selection clipboard

# OSX
elif [[ $OSTYPE == "darwin"* ]]; then
  # if there is no path file, it must have been deleted or the installer failed
  require_file_exists $AW_PATH/.path \
    "Please reinstall vim-anywhere."

  app=$(osascript $AW_PATH/script/current_app.scpt)
  mvim_path=$(cat $AW_PATH/.path)

  require_file_exists $mvim_path \
    "mvim must have been move or uninstalled.\nPlease make sure it is" \
    "available in your path and then reinstall vim-anywhere."

  $mvim_path --nofork $TMPFILE
  # todo, fix invalid file
  pbcopy < $TMPFILE
  osascript -e "activate application \"$app\""
fi
